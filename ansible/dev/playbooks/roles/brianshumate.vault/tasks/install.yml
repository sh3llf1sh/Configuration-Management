---
# File: tasks/install.yml - package installation tasks for vault

- name: OS packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ vault_os_packages }}"
  tags: installation

- name: Check Vault package checksum file
  local_action: stat path="{{ role_path }}/files/{{ vault_shasums }}"
  become: no
  run_once: true
  register: vault_checksum

- name: Get Vault package checksum file
  local_action: get_url url="{{ vault_checksum_file_url }}"
    dest="{{ role_path }}/files/{{ vault_shasums }}"
  become: no
  run_once: true
  tags: installation
  when: not vault_checksum.stat.exists | bool

- name: Get Vault package checksum
  local_action: shell grep "{{ vault_pkg }}" "{{ role_path }}/files/{{ vault_shasums }}" | awk '{print $1}'
  become: no
  run_once: true
  register: vault_sha256
  tags: installation

- name: Check Vault package file
  local_action: stat path="{{ role_path }}/files/{{ vault_pkg }}"
  become: no
  run_once: true
  register: vault_package

- name: Download Vault
  local_action: get_url url="{{ vault_zip_url }}" dest="{{ role_path }}/files/{{ vault_pkg }}" checksum="sha256:{{ vault_sha256.stdout }}" timeout="42"
  become: no
  run_once: true
  tags: installation
  when: not vault_package.stat.exists | bool

- name: Unarchive Vault
  local_action: unarchive src="{{ role_path }}/files/{{ vault_pkg }}" dest="{{ role_path }}/files/" creates="{{ role_path }}/files/vault"
  become: no
  run_once: true
  tags: installation

- name: Install Vault
  copy:
    src: "{{ role_path }}/files/vault"
    dest: "{{ vault_bin_path }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: "0755"
  tags: installation

- name: Cleanup
  local_action: file path="{{ item }}" state="absent"
  become: no
  with_fileglob: "{{ role_path }}/files/vault"
  run_once: true
  tags: installation
